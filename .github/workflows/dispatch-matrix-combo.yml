name: nightly tests

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      Environment:
        description: 'Environment to run tests in'
        required: true
        default: 'dev'
        type: choice
        options: [dev, qa, prod]



jobs:
  pre:
    runs-on: ubuntu-latest
    outputs:
      set-env: ${{ steps.set-env.outputs.env }}
      matrix: ${{ steps.setMatrix.outputs.matrix }}
    steps:
      - name: Set matrix strategy
        id: setMatrix
        run: |
          echo 'matrix={"env": ["dev", "qa", "prod"]}' >> $GITHUB_OUTPUT

      - name: Set environment variable
        id: set-env
        run: |
          if [[ "${{ github.event.inputs.Environment }}" == "dev" ]]; then
            echo "env=development" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.Environment }}" == "qa" ]]; then
            echo "env=quality-assurance" >> $GITHUB_OUTPUT
          else
            echo "env=production" >> $GITHUB_OUTPUT
          fi

          echo $set-env
  setup:
    runs-on: ubuntu-latest
    needs: pre
    strategy:
      matrix: ${{ fromJson(needs.pre.outputs.matrix) }}
      fail-fast: false
    environment: ${{ matrix.env }}
    outputs:
      group-env: ${{ steps.get-env.outputs.group-env }}
    steps:
      - name: Set up environment
        id: get-env
        run: |
          echo "Setting up environment for ${{ matrix.env }}"
          echo "group-env=${{ matrix.env }}" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: [pre, setup]
    strategy:
      matrix: ${{ fromJson(needs.pre.outputs.matrix) }}
      fail-fast: false
    environment: ${{ matrix.env }}
    steps:
      - name: Running tests
        run: |
          echo "Check env after matrix ${{ needs.setup.outputs.group-env }}"

  check-tests:
    needs: [pre, setup, test]
    runs-on: ubuntu-latest
    if: always() && needs.pre.result == 'success'
    steps:
      - name: check if tests passed
        run: |
          if [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "Tests passed successfully."
          else
            echo "Tests failed. Please check the logs."
            exit 1
          fi